{% extends 'SandboxWebsiteBundle:Layout:layout.html.twig' %}
{% block content %}

    <div id="map_wrapper">
        <div id="map_canvas" class="mapping"></div>
    </div>


    <div class="row">
        <select name="hotel-place" id="hotel-place">
            <option value="-1">{{ 'hotel.city'|trans({}, 'frontend') }}</option>
            {% for place in places %}
                <option value="{{ place.cityid }}">{{ place.title }}</option>
            {% endfor %}
        </select>

        <a class="btn btn-primary" id="hotel-filter" href="#">{{ 'hotel.filter'|trans({}, 'frontend') }}</a>

    </div>


    <div class="row" id="hotel-holder">

        {% for hotel in pagerfanta.CurrentPageResults %}
            {% include '@SandboxWebsite/Hotel/hotel.html.twig' %}
        {% endfor %}

        {#{% if pagerfanta.haveToPaginate %}#}
            {#{{ pagerfanta(pagerfanta, 'twitter_bootstrap3') }}#}
        {#{% endif %}#}
        {# does not paginate because of the route controller #}
    </div>




    <script>
        jQuery(function($) {
            // Asynchronously Load the map API
            var script = document.createElement('script');
            script.src = "http://maps.googleapis.com/maps/api/js?sensor=false&callback=initialize";
            document.body.appendChild(script);
        });

        function initialize() {
            var map;
            var bounds = new google.maps.LatLngBounds();
            var mapOptions = {
                mapTypeId: 'roadmap'
            };

            // Display a map on the page
            map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
            map.setTilt(45);

            var markers = [];
            var infoWindowContent = [];
            var markerIcons = [];

            {% for hotel in pagerfanta.CurrentPageResults %}
                {% if hotel.longitude and hotel.latitude %}

                // Multiple Markers
                markers.push(['{{ hotel.title }}', {{ hotel.latitude }}, {{ hotel.longitude }}]);
                // Info Window Content
                infoWindowContent.push(
                        ['<div class="info_content">' +
                        '<h3>{{ hotel.title }}</h3>' +
                        '<p>{{ hotel.shortDescription }}</p>' +
                        {% if hotel.cheapestPackage %}
                        '<p>{{ hotel.cheapestPackage.minPrice }}</p>' +
                        {% else %}
                        '<p>{{ hotel.price }}. <a href="http://www.booking.com/searchresults.et.html?lang=et&si=ai%2Cco%2Cci%2Cre%2Cdi&ss={{ hotel.title }}">booking.com</a></p>' +
                        {% endif %}
                        '</div>'
                        ]);
                    {% if hotel.cheapestPackage %}
                        {% set  price = hotel.cheapestPackage.minPrice|number_format(0) %}
                            {% if price > 0 %}
                            markerIcons.push('{{ asset('bundles/sandboxwebsite/img/markers/generated/marker'~price~'.png') }}');
                            {% else %}
                            //red
                            markerIcons.push('{{ asset('bundles/sandboxwebsite/img/markers/template/marker_b.png') }}');
                            {% endif %}
                    {% elseif hotel.price > 0 %}
                        markerIcons.push('{{ asset('bundles/sandboxwebsite/img/markers/generated/marker_b'~hotel.price~'.png') }}');
                    {% else %}
                        markerIcons.push('{{ asset('bundles/sandboxwebsite/img/markers/template/marker_b.png') }}');

                    {% endif %}

                {% endif %}
            {% endfor %}





            // Display multiple markers on a map
            var infoWindow = new google.maps.InfoWindow(), marker, i;

            // Loop through our array of markers & place each one on the map
            for( i = 0; i < markers.length; i++ ) {
                var position = new google.maps.LatLng(markers[i][1], markers[i][2]);
                bounds.extend(position);
                marker = new google.maps.Marker({
                    position: position,
                    map: map,
                    title: markers[i][0],
                    icon: markerIcons[i]
                });

                // Allow each marker to have an info window
                google.maps.event.addListener(marker, 'click', (function(marker, i) {
                    return function() {
                        infoWindow.setContent(infoWindowContent[i][0]);
                        infoWindow.open(map, marker);
                    }
                })(marker, i));

                // Automatically center the map fitting all markers on the screen
                map.fitBounds(bounds);
            }

            // Override our map zoom level once our fitBounds function runs (Make sure it only runs once)
//            var boundsListener = google.maps.event.addListener((map), 'bounds_changed', function(event) {
//                this.setZoom(14);
//                google.maps.event.removeListener(boundsListener);
//            });

        }
    </script>

{% endblock %}
