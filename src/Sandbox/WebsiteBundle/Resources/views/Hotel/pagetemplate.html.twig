
<div class="row">
    <div class="col-md-12">
    {% if page.mainPhoto %}
        <img src="{{ asset(page.mainPhoto.url) }}" class="img-responsive"/>
    {% elseif page.buildingPhoto %}
        <img src="{{ asset(page.buildingPhoto.url) }}" class="img-responsive"/>
    {% endif %}
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <h4><a href="{{ path('_slug', {'url' : get_node_translation_for(page).fullSlug }) }}">{{ page.title }}</a></h4>
        <p>{{ page.longDescription|raw }}</p>
    </div>
    <div class="col-md-6">
        <div id="map_wrapper2">
            <div id="map_canvas2" class="mapping"></div>
        </div>
    </div>
</div>

{{ render_pageparts(page, 'main') }}
{{ render_pageparts(page, 'gallery') }}
{{ render_pageparts(page, 'information') }}

{% if packages|length > 0 %}
<div class="row">
    <div class="col-md-12">
        <h3>{{ 'packages'|trans({}, 'frontend') }}</h3>
    </div>
</div>
<div class="row">
    <div id="hotel-packages">
    {% for package in packages %}
        <div class="col-md-4 well package">
            <h4>
                {% if package.titleTranslated %}
                    {{ package.titleTranslated }}
                {% else %}
                    {{ package.title }}
                {% endif %}
                {% if package.originalLanguage %}
                    <img src="{{ asset('bundles/sandboxwebsite/img/flags/' ~ package.originalLanguage ~ '.gif') }}"/>
                {% endif %}
            </h4>
            {% if package.image %}
                <img src="{{ package.image }}" alt="" class="img-responsive"/>
            {% endif %}
            <p><a class="btn btn-default" href="{{ path('_slug', {'url': get_node_translation_for(package).fullSlug }) }}">{{ package.minprice }}</a></p>
        </div>
    {% endfor %}
    </div>
</div>

    <script>

        jQuery(function($) {
            initialize2();

            var container = document.querySelector('#hotel-packages');
            var iso = new Isotope( container, {itemSelector: '.package'});

            imagesLoaded( container, function() {
                iso.layout();
            });

            var container2 = document.querySelector('.hotel-gallery-pp > div');
            var iso2 = new Isotope( container2, {itemSelector: '.col-md-3'});

            imagesLoaded( container2, function() {
                iso2.layout();
            });

            $("a.fancybox").fancybox();
        });

        function initialize2() {
            var map;
            var bounds = new google.maps.LatLngBounds();
            var mapOptions = {
                mapTypeId: 'roadmap'
            };

            // Display a map on the page
            map = new google.maps.Map(document.getElementById("map_canvas2"), mapOptions);
            map.setTilt(45);

            var markers = [];
            var infoWindowContent = [];

            {% if page.longitude and page.latitude %}

            // Multiple Markers
            markers.push(['{{ page.title }}', {{ page.latitude }}, {{ page.longitude }}]);
            // Info Window Content
            infoWindowContent.push(
                    ['<div class="info_content">' +
                    '<h3>{{ page.title }}</h3>' +
                    '<p>{{ page.shortDescription }}</p>' +
                    {% if hotel_cheapest_package(page, app.request.locale) %}
                    '<p>{{ hotel_cheapest_package(page, app.request.locale).minPrice }}</p>' +
                    {% endif %}
                    '</div>'
                    ]);

            {% endif %}





            // Display multiple markers on a map
            var infoWindow = new google.maps.InfoWindow(), marker, i;

            // Loop through our array of markers & place each one on the map
            for( i = 0; i < markers.length; i++ ) {
                var position = new google.maps.LatLng(markers[i][1], markers[i][2]);
                bounds.extend(position);
                marker = new google.maps.Marker({
                    position: position,
                    map: map,
                    title: markers[i][0]
                });

                // Allow each marker to have an info window
                google.maps.event.addListener(marker, 'click', (function(marker, i) {
                    return function() {
                        infoWindow.setContent(infoWindowContent[i][0]);
                        infoWindow.open(map, marker);
                    }
                })(marker, i));

                // Automatically center the map fitting all markers on the screen
                map.fitBounds(bounds);
            }

            // Override our map zoom level once our fitBounds function runs (Make sure it only runs once)
            var boundsListener = google.maps.event.addListener((map), 'bounds_changed', function(event) {
                this.setZoom(11);
                google.maps.event.removeListener(boundsListener);
            });

        }
    </script>
{% endif %}