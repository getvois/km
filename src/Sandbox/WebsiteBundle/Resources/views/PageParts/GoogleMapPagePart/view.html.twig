<div class="row google-map nomargin">
    <h2>{{ resource.title }}</h2>
    {{ resource.content|raw }} 

    {% if resource.onlymap == 0 %}

    {% for item in resource.places %}
        <div class="image-thumbnail-wrapper {% if item.wrapperClass %}{{ item.wrapperClass }}{% endif %} ">
            {% if item.title  %}<h3>{{ item.title }}</h3>{% endif %}
            <div class="image-img {% if item.imgClass %}{{ item.imgClass }}{% endif %}">
                {% if item.image is not empty %}
                    <a href="{{ item.url }}">
                        <img {% if item.responsive %}class='img-responsive'{% endif %} src="{{ asset(item.image.url | imagine_filter(item.size)) }}" {% if item.imageAltText is not empty %}alt="{{ item.imageAltText }}"{% endif %} />
                    </a>
                {% endif %}
                {#{{ resource.linkText }}#}
            </div>
            {% if item.content is not empty %}<p>{{ item.content | raw }}</p>{% endif %}
        </div>
    {% endfor %}
    {% endif %}
	<div class="google-map-pp map-container">
	    {% if resource.places is not empty %}
	        <div id="map_wrapper"> 
	            <div id="map_canvas" class="mapping"></div>
	        </div>
	        <style>
	            #map_wrapper {
	                height: 400px;
	            }
	
	            #map_canvas {
	                width: 100%;
	                height: 100%;
	            }
	        </style>
	        <script>
	            jQuery(function($) {
	                // Asynchronously Load the map API
	                var script = document.createElement('script');
	                script.src = "http://maps.googleapis.com/maps/api/js?sensor=false&callback=initialize";
	                document.body.appendChild(script);
	            });

                var map;
	            function initialize() {
	                var bounds = new google.maps.LatLngBounds();
	                var mapOptions = {
	                    mapTypeId: 'roadmap'//,
                        //maxZoom: 5
	                };
	
	                // Display a map on the page
	                map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
	                map.setTilt(45);
	
	                // Multiple Markers
	                var markers = [
	                    {% set markers = "" %}
	                    {% for item in resource.places %}
	                        {% if item.latitude and item.longitude %}
	                            {% set markers = markers ~ "['" ~item.title~ "', " ~item.latitude ~", " ~item.longitude~ " ]," %}
	                        {% endif %}
	                    {% endfor %}
	
	                    {{ markers | trim(',') | raw }}
	                ];
	
	                // Info Window Content
	                var infoWindowContent = [
	
	                    {% set desc = "" %}
	                    {% for item in resource.places %}
	                    {% set desc = desc ~ "['<div class=\"info_content\">" %}
	
	                     {% if item.url %}
	                            {% set desc = desc ~ "<a href=\""~ item.url ~"\"><h4>"~ item.title ~"</h4></a>" %}
	                    {% else %}
	                            {% set desc = desc ~ "<h4>" ~ item.title  ~ "</h4>" %}
	                    {% endif %}
	                            {% set desc = desc ~ "<p>" ~ item.description ~ "</p></div>']," %}
	                    {% endfor %}
	
	                    {{ desc | trim(',') | raw}}
	                ];
	
	                // Display multiple markers on a map
	                var infoWindow = new google.maps.InfoWindow(), marker, i;


	                // Loop through our array of markers & place each one on the map
	                for( i = 0; i < markers.length; i++ ) {
	                    var position = new google.maps.LatLng(markers[i][1], markers[i][2]);
	                    bounds.extend(position);
	                    marker = new google.maps.Marker({
	                        position: position,
	                        map: map,
	                        title: markers[i][0]
	                    });
	
	                    // Allow each marker to have an info window
	                    google.maps.event.addListener(marker, 'click', (function(marker, i) {
	                        return function() {
	                            infoWindow.setContent(infoWindowContent[i][0]);
	                            infoWindow.open(map, marker);
	                        }
	                    })(marker, i));
                        var bounds_listener = google.maps.event.addListener( map, 'bounds_changed', function(event) {
                            if (this.getZoom() > 13) {
                                this.setZoom(13);
                            }

                            google.maps.event.removeListener( bounds_listener );
                        });
	                    // Automatically center the map fitting all markers on the screen
	                    map.fitBounds(bounds);
	                }


	            }
	        </script>
	    {% endif %}
	</div>
</div>