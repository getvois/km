<div class="row">
    <h2>{{ resource.title }}</h2>
    {{ resource.content|raw }}

    {% if resource.onlymap == 0 %}

    {% for item in resource.places %}
        <div class="image-thumbnail-wrapper {% if item.wrapperClass %}{{ item.wrapperClass }}{% endif %} ">
            {% if item.title  %}<h2>{{ item.title }}</h2>{% endif %}
            <div class="image-thumbnail-img {% if item.imgClass %}{{ item.imgClass }}{% endif %}">
                {% if item.image is not empty %}
                    <a href="{{ item.url }}">
                        <img {% if item.responsive %}class='img-responsive'{% endif %} src="{{ asset(item.image.url | imagine_filter(item.size)) }}" {% if item.imageAltText is not empty %}alt="{{ item.imageAltText }}"{% endif %} />
                    </a>
                {% endif %}
                {#{{ resource.linkText }}#}
            </div>
            <div class="image-thumbnail-text">{{ item.content | raw }}</div>
        </div>
    {% endfor %}
    {% endif %}
</div>


<div class="google-map-pp">
    {% if resource.places is not empty %}
        <div id="map_wrapper">
            <div id="map_canvas" class="mapping"></div>
        </div>
        <style>
            #map_wrapper {
                height: 400px;
            }

            #map_canvas {
                width: 100%;
                height: 100%;
            }
        </style>
        <script>
            jQuery(function($) {
                // Asynchronously Load the map API
                var script = document.createElement('script');
                script.src = "http://maps.googleapis.com/maps/api/js?sensor=false&callback=initialize";
                document.body.appendChild(script);
            });

            function initialize() {
                var map;
                var bounds = new google.maps.LatLngBounds();
                var mapOptions = {
                    mapTypeId: 'roadmap'
                };

                // Display a map on the page
                map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
                map.setTilt(45);

                // Multiple Markers
                var markers = [


                                {% for item in resource.places %}
                               ['{{ item.title }}', {{ item.latitude }}, {{ item.longitude }}]
                    {% if loop.last %}
                    {% else %}
                       ,
                    {% endif %}
                                {% endfor %}

                ];

                // Info Window Content
                var infoWindowContent = [

                    {% for item in resource.places %}
                    ['<div class="info_content">' +
                    {% if item.url %}
                            '<a href="{{ item.url }}"><h3>{{ item.title }}</h3></a>' +
                    {% else %}
                        '<h3>{{ item.title }}</h3>' +
                    {% endif %}

                    '<p>{{ item.description }}</p>' +
                    '</div>']

                    {% if loop.last %}
                    {% else %}
                    ,
                    {% endif %}
                    {% endfor %}

                ];

                // Display multiple markers on a map
                var infoWindow = new google.maps.InfoWindow(), marker, i;

                // Loop through our array of markers & place each one on the map
                for( i = 0; i < markers.length; i++ ) {
                    var position = new google.maps.LatLng(markers[i][1], markers[i][2]);
                    bounds.extend(position);
                    marker = new google.maps.Marker({
                        position: position,
                        map: map,
                        title: markers[i][0]
                    });

                    // Allow each marker to have an info window
                    google.maps.event.addListener(marker, 'click', (function(marker, i) {
                        return function() {
                            infoWindow.setContent(infoWindowContent[i][0]);
                            infoWindow.open(map, marker);
                        }
                    })(marker, i));

                    // Automatically center the map fitting all markers on the screen
                    map.fitBounds(bounds);
                }

//                // Override our map zoom level once our fitBounds function runs (Make sure it only runs once)
//                var boundsListener = google.maps.event.addListener((map), 'bounds_changed', function(event) {
//                    this.setZoom(14);
//                    google.maps.event.removeListener(boundsListener);
//                });

            }
        </script>
    {% endif %}
</div>